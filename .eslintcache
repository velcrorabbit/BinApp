[{"C:\\Users\\admin\\my-app\\src\\index.js":"1","C:\\Users\\admin\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\my-app\\src\\App.js":"3","C:\\Users\\admin\\my-app\\src\\BinDataFunctions.js":"4","C:\\Users\\admin\\my-app\\src\\pages.js":"5"},{"size":516,"mtime":1611064824198,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":582,"mtime":1612888941418,"results":"10","hashOfConfig":"7"},{"size":4344,"mtime":1612886644572,"results":"11","hashOfConfig":"7"},{"size":4975,"mtime":1614101991350,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1tamoa3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"q3y812",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin\\my-app\\src\\index.js",[],["27","28"],"C:\\Users\\admin\\my-app\\src\\reportWebVitals.js",[],["29","30"],"C:\\Users\\admin\\my-app\\src\\App.js",["31"],"import React from \"react\";\nimport './App.css';\nimport './BinDataFunctions.js';\nimport { Routes, Route, Redirect } from 'react-router-dom';\nimport { FutureCollections, Heading, Home, UserInfo, BinData } from './pages';\n\n\nfunction App() {\n  return (\n  <div className=\"App\">\n    <Heading />\n    <Routes>\n      <Route path=\"/\" element={<Home />}/>\n      <Route path=\"/CurrentCollection\" element={<BinData />}/>\n      <Route path=\"/YourInfo\" element={<UserInfo />}/>\n      <Route path=\"/FutureCollections\" element={<FutureCollections />}/>\n    </Routes>\n  </div>);\n}\n\nexport default App;","C:\\Users\\admin\\my-app\\src\\BinDataFunctions.js",["32"],"import brownBinIcon from \"./Images/BrownBin.jpg\";\r\nimport blackBinIcon from \"./Images/BlackBin.jpg\";\r\nimport blueBinIcon from \"./Images/BlueBin.jpg\";\r\nimport greenBinIcon from \"./Images/GreenBin.jpg\";\r\n\r\n// get the needed bin data from the JSON Biffa has provided.\r\nexport function setBinCollection(binJSON, uprn) {\r\n\r\n    var binArray = [];\r\n    var locationObject = null;\r\n\r\n    binJSON.forEach(location => {\r\n        if (location[\"uprn\"] == uprn){\r\n            locationObject = location;\r\n        }\r\n    });\r\n    if (locationObject){\r\n        locationObject.data.data.collections.forEach(element => {\r\n\r\n            var binType = element.bin_type;\r\n            var binImage = getBinImage(binType)\r\n            var dates = [new Date(element.next_date), new Date(element.further_dates[0])]\r\n            if(element.further_dates[1]){\r\n                dates.push(new Date(element.further_dates[1]));\r\n            }\r\n            dates.forEach(date => {\r\n                var binObject = { type: binType, date: date, imageUrl: binImage };\r\n                binArray.push(binObject);\r\n            });\r\n        });\r\n\r\n        binArray.sort((a, b) => {\r\n            return a.date - b.date;\r\n        })\r\n\r\n        binArray.forEach(element => {\r\n            element.date = getLongDate(element.date);\r\n        });\r\n\r\n        \r\n        return binArray;\r\n    }\r\n}\r\n\r\n// get an array of just the unique bin collection days\r\nfunction getArrayOfDates(binArray) {\r\n    var binDates = [];\r\n    binArray.forEach(element => {\r\n        if (!binDates.includes(element.date)) {\r\n            binDates.push(element.date);\r\n        }\r\n    });\r\n    return binDates;\r\n}\r\n\r\n// create an array of bin dates with each bin collected on that date as an object in a nested array.\r\nexport function getArrayOfBinByDate(binArray) {\r\n    var dateArray = getArrayOfDates(binArray);\r\n    var binArrayByDate = [];\r\n    dateArray.forEach(date => {\r\n        var bins = [];\r\n        binArray.forEach(bin => {\r\n            if (bin.date === date) {\r\n                var binType = bin.type;\r\n                var binImage = bin.imageUrl;\r\n                var binObject = { type: binType, imageUrl: binImage }\r\n                bins.push(binObject);\r\n            }\r\n        });\r\n        var rowObject = { date: date, bins: bins };\r\n        binArrayByDate.push(rowObject);\r\n\r\n    });\r\n    return binArrayByDate;\r\n}\r\n\r\nexport function getFutureCollections(binArray) {\r\n\r\n    var futureArray = binArray.slice(1);\r\n\r\n    return <>\r\n        {futureArray.map(binDay => {\r\n            return <div key={binDay.date}>\r\n                <h3>{binDay.date}</h3>\r\n                {binDay.bins.map(bin => {\r\n                    return <img className=\"bin-image\" key={bin.type} src={bin.imageUrl} alt={bin.type} height=\"100\" />;\r\n                })\r\n                }\r\n            </div>\r\n        })}\r\n    </>\r\n}\r\n\r\n// get the html for the first collection in the list that will display on the first page.\r\nexport function getFirstCollectionHTML(binArray) {\r\n\r\n    var rowDate = binArray[0].date;\r\n\r\n    return <>\r\n        <h2>Next bin collection: {binArray[0].date}</h2>\r\n        {binArray.map(element => {\r\n            if (element.date === rowDate) {\r\n                return <img className=\"bin-image\" key={element.type} src={element.imageUrl} alt={element.type} height=\"100\" />\r\n            } else {\r\n                return null;\r\n            }\r\n        })}\r\n    </>\r\n\r\n}\r\n\r\n// change the date object into a more human-readable format\r\nfunction getLongDate(date) {\r\n\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    var longDate = date.getDate() + \" \" + months[date.getMonth()] + \" \" + date.getFullYear();\r\n\r\n    return longDate;\r\n\r\n}\r\n\r\n// get the locations of the image for each bin\r\nfunction getBinImage(binType) {\r\n\r\n    var imageLocation;\r\n\r\n    switch (binType) {\r\n        case \"Blue Bin\":\r\n            imageLocation = blueBinIcon\r\n            break;\r\n        case \"Brown Bin\":\r\n            imageLocation = brownBinIcon\r\n            break;\r\n        case \"Green Bin\":\r\n            imageLocation = greenBinIcon\r\n            break;\r\n        case \"Black / Grey Bin\":\r\n            imageLocation = blackBinIcon\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return imageLocation;\r\n}","C:\\Users\\admin\\my-app\\src\\pages.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":25,"nodeType":"42","messageId":"43","endLine":4,"endColumn":33},{"ruleId":"44","severity":1,"message":"45","line":13,"column":30,"nodeType":"46","messageId":"47","endLine":13,"endColumn":32},{"ruleId":"44","severity":1,"message":"45","line":86,"column":30,"nodeType":"46","messageId":"47","endLine":86,"endColumn":32},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]